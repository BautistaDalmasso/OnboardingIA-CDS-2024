apply plugin: 'com.android.library'

group = 'expo.modules.facialrecognition'
version = '0.1.0'

def expoModulesCorePlugin = new File(project(":expo-modules-core").projectDir.absolutePath, "ExpoModulesCorePlugin.gradle")
apply from: expoModulesCorePlugin
applyKotlinExpoModulesCorePlugin()
useCoreDependencies()
useExpoPublishing()

// If you want to use the managed Android SDK versions from expo-modules-core, set this to true.
// The Android SDK versions will be bumped from time to time in SDK releases and may introduce breaking changes in your module code.
// Most of the time, you may like to manage the Android SDK versions yourself.
def useManagedAndroidSdkVersions = false
if (useManagedAndroidSdkVersions) {
  useDefaultAndroidSdkVersions()
} else {
  buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback ->
      rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
    }
  }
  project.android {
    compileSdkVersion safeExtGet("compileSdkVersion", 34)
    defaultConfig {
      minSdkVersion safeExtGet("minSdkVersion", 21)
      targetSdkVersion safeExtGet("targetSdkVersion", 34)
    }
  }
}

android {
  namespace "expo.modules.facialrecognition"
  defaultConfig {
    versionCode 1
    versionName "0.1.0"
  }
  lintOptions {
    abortOnError false
  }

  // Enables Compose functionality
  buildFeatures {
    compose true
  }
  // Kotlin compiler version must be tied to Kotlin version
  // according: https://developer.android.com/jetpack/androidx/releases/compose-kotlin
  composeOptions {
    kotlinCompilerExtensionVersion = "1.5.10"
  }
}

def lifecycle_version = "2.6.1"
def camerax_version = "1.3.0-beta02"
def accompanist_version = '0.31.6-rc'

dependencies {
  implementation 'androidx.core:core-ktx:1.10.1'
  implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
  implementation 'androidx.activity:activity-compose:1.7.2'
  implementation platform('androidx.compose:compose-bom:2023.06.01')
  implementation 'androidx.compose.ui:ui'
  implementation 'androidx.compose.ui:ui-graphics'
  implementation 'androidx.compose.ui:ui-tooling-preview'
  implementation 'androidx.compose.material3:material3'
  implementation "androidx.compose.material:material-icons-extended"
  implementation 'androidx.compose.material:material:1.4.3'
  implementation 'androidx.cardview:cardview:1.0.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
  debugImplementation 'androidx.compose.ui:ui-tooling'
  debugImplementation 'androidx.compose.ui:ui-test-manifest'

  ///// LIFECYCLE /////
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
  implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

  //// CAMERA STUFF ////
  implementation "androidx.camera:camera-camera2:$camerax_version"
  implementation "androidx.camera:camera-lifecycle:$camerax_version"
  implementation "androidx.camera:camera-view:$camerax_version"
  implementation "androidx.camera:camera-extensions:$camerax_version"

  //// ML-KIT ////
  implementation 'com.google.mlkit:text-recognition:16.0.0'

  // MLKit Face Detection
  implementation 'com.google.mlkit:face-detection:16.1.5'

  // TensorFlow Lite dependencies
  implementation 'org.tensorflow:tensorflow-lite:2.11.0'
  implementation 'org.tensorflow:tensorflow-lite-gpu:2.11.0'
  implementation 'org.tensorflow:tensorflow-lite-gpu-api:2.11.0'
  implementation 'org.tensorflow:tensorflow-lite-support:0.4.2'

  // DocumentFile and ExitInterface
  implementation "androidx.documentfile:documentfile:1.0.1"
  implementation "androidx.exifinterface:exifinterface:1.3.6"

  //// ACCOMPANIST ////
  implementation "com.google.accompanist:accompanist-permissions:$accompanist_version"
}
